C51 COMPILER V8.01   ENC_03                                                                12/13/2013 12:29:24 PAGE 1   


C51 COMPILER V8.01, COMPILATION OF MODULE ENC_03
OBJECT MODULE PLACED IN enc_03.OBJ
COMPILER INVOKED BY: C:\Program Files\Keil3\C51\BIN\C51.EXE enc_03.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          //=======================================================================================
   2          /*
   3            RS | Jakowski | Hellweg Berufskolleg
   4            Jurij Vasilenko | ITAM2 | 11. Dez 2013
   5            Enc_03
   6          */
   7          //=======================================================================================
   8          //************************ Quelltextdatein **********************************************
   9          #include <Reg515c.h>
  10          //************************* Konstanten **************************************************
  11          sbit P1_0=P1^0;  // ENC1
  12          sbit P1_4=P1^4;  // ENC1
  13          sbit P1_1=P1^1;  // ENC2
  14          sbit P1_2=P1^2;  // ENC2
  15          //****************************** Funktionsdeklarationen *********************************
  16          void main(void);
  17          void init_seriell(void);
  18          void putchar(char ch);
  19          void printstring(char *cp);
  20          void printintdez(int x);
  21          //******************************** Hauptprogramm ****************************************
  22          //---------------------------------------------------------------------------------------
  23          void main(void)
  24          {
  25   1        char dir, dir2;
  26   1        int count=0, count2=0, save=0, save2=0;
  27   1        bit a, aalt, b, balt, c, calt, d, dalt;
  28   1      
  29   1        if(BD==0)
  30   1          init_seriell();
  31   1        a=b=aalt=balt;
  32   1        c=d=calt=dalt;
  33   1      
  34   1        printstring("9 8 7 6 5 4 3 2 1 0 1 2 3 4 5 6 7 8 9");
  35   1        putchar('\n');
  36   1      
  37   1        while(1)
  38   1        {
  39   2          a=P1_0;
  40   2          b=P1_4;
  41   2          c=P1_1;
  42   2          d=P1_2;
  43   2      
  44   2          if(b==0 && aalt==0 && a==1||b==1 && aalt==1 && a==0||a==1 && balt==0 && b==1||a==0 && balt==1 && b==0)
  45   2            dir++;
  46   2          if(b==0 && aalt==1 && a==0||b==1 && aalt==0 && a==1||a==0 && balt==0 && b==1||a==1 && balt==1 && b==0)
             - 
  47   2            dir--;
  48   2          if(d==0 && calt==0 && c==1||d==1 && calt==1 && c==0||c==1 && dalt==0 && d==1||c==0 && dalt==1 && d==0)
  49   2            dir2++;
  50   2          if(d==0 && calt==1 && c==0||d==1 && calt==0 && c==1||c==0 && dalt==0 && d==1||c==1 && dalt==1 && d==0)
             - 
  51   2            dir2--;
  52   2      
  53   2          aalt=a;
C51 COMPILER V8.01   ENC_03                                                                12/13/2013 12:29:24 PAGE 2   

  54   2          balt=b;
  55   2          calt=c;
  56   2          dalt=d;
  57   2      
  58   2          if(dir!=0)
  59   2          {
  60   3            if(dir>=1)
  61   3            {
  62   4              if(count<0)
  63   4              {
  64   5                count++;
  65   5                count2++;
  66   5                putchar('\b');
  67   5                putchar('\b');
  68   5                putchar('\b');
  69   5                putchar('^');
  70   5              }
  71   4            }
  72   3            if(dir<=-1)
  73   3            {
  74   4              if(count>-18)
  75   4              {
  76   5                count--;
  77   5                count2--;
  78   5                putchar('\b');
  79   5                printstring("  ");
  80   5                putchar('^');
  81   5              }
  82   4            }
  83   3            dir=0; 
  84   3          }
  85   2      
  86   2          if(dir2!=0)
  87   2          {
  88   3            if(dir2>=1)
  89   3            {
  90   4              if(count2<0)
  91   4              {
  92   5                count2++;
  93   5                count++;
  94   5                putchar('\b');
  95   5                putchar('\b');
  96   5                putchar('\b');
  97   5                putchar('#');
  98   5              }
  99   4            }
 100   3            if(dir2<=-1)
 101   3            {
 102   4              if(count2>-18)
 103   4              {
 104   5                count2--;
 105   5                count--;
 106   5                putchar('\b');
 107   5                printstring("  ");
 108   5                putchar('#');
 109   5              }
 110   4            }
 111   3            dir2=0; 
 112   3          }
 113   2      
 114   2        }
 115   1      }
C51 COMPILER V8.01   ENC_03                                                                12/13/2013 12:29:24 PAGE 3   

 116          //***************************** F u n k t i o n e n *************************************
 117          void init_seriell(void) 
 118          {
 119   1        SCON  = 0x50;  // SCON: mode 1, 8-bit UART, enable rcvr 
 120   1        PCON |= 0x80;  // SMOD Bit setzen 
 121   1        SRELH = 0x03;  // 9600 baud @ 10MHz für C515C
 122   1        SRELL = 0xBF;
 123   1        BD    = 1;  // Baudratengenerator verwenden
 124   1        TI    = 1;  // TI:   "vorausgegangenes Transmit" beendet
 125   1      }
 126          //---------------------------------------------------------------------------------------
 127          void putchar(char ch)
 128          {
 129   1        while(TI != 1);  // voriges Transmit Ende abwarten
 130   1        TI=0;  // für nächste Übertragung löschen
 131   1        SBUF=ch;  // Byte der Variablen ch seriell senden
 132   1      }
 133          //---------------------------------------------------------------------------------------
 134          void printstring(char *cp)
 135          {
 136   1        for(; *cp != '\0'; cp++)
 137   1          putchar(*cp);   // Zeichen seriell ausgeben
 138   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    509    ----
   CONSTANT SIZE    =     41    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      10
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       8
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
