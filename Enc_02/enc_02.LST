C51 COMPILER V8.01   ENC_02                                                                12/11/2013 10:17:41 PAGE 1   


C51 COMPILER V8.01, COMPILATION OF MODULE ENC_02
OBJECT MODULE PLACED IN enc_02.OBJ
COMPILER INVOKED BY: C:\Program Files\Keil3\C51\BIN\C51.EXE enc_02.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          //=======================================================================================
   2          /*
   3            RS | Jakowski | Hellweg Berufskolleg
   4            Jurij Vasilenko | ITAM2 | 11. Dez 2013
   5            Enc_02
   6          */
   7          //=======================================================================================
   8          //************************ Quelltextdatein **********************************************
   9          #include <Reg515c.h>
  10          //************************* Konstanten **************************************************
  11          sbit P1_0=P1^0;  // ENC1
  12          sbit P1_1=P1^1;  // ENC2
  13          sbit P1_2=P1^2;  // ENC2
  14          sbit P1_4=P1^4;  // ENC1
  15          //****************************** Funktionsdeklarationen *********************************
  16          void main(void);
  17          void init_seriell(void);
  18          void putchar(char ch);
  19          void printstring(char *cp);
  20          void printintdez(int x);
  21          //******************************** Hauptprogramm ****************************************
  22          //---------------------------------------------------------------------------------------
  23          void main(void)
  24          {
  25   1        char dir,dir2;
  26   1        int count=0xFFFF, count2=0xFFFF;
  27   1        bit a, aalt, b, balt, c, calt, d, dalt;
  28   1      
  29   1        if(BD==0)
  30   1          init_seriell();
  31   1        a=b=aalt=balt;
  32   1        c=d=calt=dalt;
  33   1      
  34   1        while(1)
  35   1        {
  36   2          a=P1_0;
  37   2          b=P1_4;
  38   2          c=P1_1;
  39   2          d=P1_2;
  40   2          if(b==0 && aalt==0 && a==1||b==1 && aalt==1 && a==0||a==1 && balt==0 && b==1||a==0 && balt==1 && b==0)
  41   2            dir++;
  42   2          if(b==0 && aalt==1 && a==0||b==1 && aalt==0 && a==1||a==0 && balt==0 && b==1||a==1 && balt==1 && b==0)
             - 
  43   2            dir--;
  44   2          if(d==0 && calt==0 && c==1||d==1 && calt==1 && c==0||c==1 && dalt==0 && d==1||c==0 && dalt==1 && d==0)
  45   2            dir2++;
  46   2          if(d==0 && calt==1 && c==0||d==1 && calt==0 && c==1||c==0 && dalt==0 && d==1||c==1 && dalt==1 && d==0)
             - 
  47   2            dir2--;
  48   2      
  49   2          aalt=a;
  50   2          balt=b;
  51   2          calt=c;
  52   2          dalt=d;
  53   2      
C51 COMPILER V8.01   ENC_02                                                                12/11/2013 10:17:41 PAGE 2   

  54   2          if(dir!=0)
  55   2          {
  56   3            if(dir>=1)
  57   3              count++;
  58   3            if(dir<=-1)
  59   3              count--;
  60   3            printintdez(count);
  61   3            dir=0;
  62   3            putchar('\n');  
  63   3          }
  64   2      
  65   2          if(dir2!=0)
  66   2          {
  67   3            if(dir2>=1)
  68   3              count2++;
  69   3            if(dir2<=-1)
  70   3              count2--;
  71   3            printstring("     ");
  72   3            printintdez(count2);
  73   3            dir2=0;
  74   3            putchar('\n');  
  75   3          }
  76   2        }
  77   1      }
  78          //***************************** F u n k t i o n e n *************************************
  79          void init_seriell(void) 
  80          {
  81   1        SCON  = 0x50;  // SCON: mode 1, 8-bit UART, enable rcvr 
  82   1        PCON |= 0x80;  // SMOD Bit setzen 
  83   1        SRELH = 0x03;  // 9600 baud @ 10MHz für C515C
  84   1        SRELL = 0xBF;
  85   1        BD    = 1;  // Baudratengenerator verwenden
  86   1        TI    = 1;  // TI:   "vorausgegangenes Transmit" beendet
  87   1      }
  88          //---------------------------------------------------------------------------------------
  89          void putchar(char ch)
  90          {
  91   1        while(TI != 1);  // voriges Transmit Ende abwarten
  92   1        TI=0;  // für nächste Übertragung löschen
  93   1        SBUF=ch;  // Byte der Variablen ch seriell senden
  94   1      }
  95          //---------------------------------------------------------------------------------------
  96          void printstring(char *cp)
  97          {
  98   1        for(; *cp != '\0'; cp++)
  99   1          putchar(*cp);   // Zeichen seriell ausgeben
 100   1      }
 101          //---------------------------------------------------------------------------------------
 102          void printintdez(int x)
 103          {
 104   1        if(x>0)
 105   1          putchar('+');
 106   1        if(x<0)
 107   1        {
 108   2          putchar('-');
 109   2          x=-x;
 110   2        }
 111   1        if(x==0)
 112   1          putchar(' ');
 113   1      
 114   1        putchar(x%100000/10000+'0');
 115   1        putchar(x%10000/1000+'0');
C51 COMPILER V8.01   ENC_02                                                                12/11/2013 10:17:41 PAGE 3   

 116   1        putchar(x%1000/100+'0');
 117   1        putchar(x%100/10+'0');
 118   1        putchar(x%10+'0');
 119   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    560    ----
   CONSTANT SIZE    =      6    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       8
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
